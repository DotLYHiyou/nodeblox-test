"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataStoreKeyInfo = void 0;
/**
 * An object describing information about a particular version of the key.
 * This is returned as the second return value by [GlobalDataStore:GetAsync](https://developer.roblox.com/en-us/api-reference/function/GlobalDataStore/GetAsync),
 * [GlobalDataStore:UpdateAsync](https://developer.roblox.com/en-us/api-reference/function/GlobalDataStore/UpdateAsync),
 * [GlobalDataStore:IncrementAsync](https://developer.roblox.com/en-us/api-reference/function/GlobalDataStore/IncrementAsync),
 * [GlobalDataStore:RemoveAsync](https://developer.roblox.com/en-us/api-reference/function/GlobalDataStore/RemoveAsync), and [DataStore:GetVersionAsync](https://developer.roblox.com/en-us/api-reference/function/DataStore/GetVersionAsync).
 *
 * ---
 * SEE ALSO
 * --------
 * - [Data Stores](https://developer.roblox.com/en-us/articles/Data-store), an in-depth guide on data structure, management, error handling, etc.
 *
 * ---
 */
class DataStoreKeyInfo {
    /**
     * @internal
     */
    constructor(created, updated, version, metadata, userIds) {
        this.CreatedTime = created;
        this.UpdatedTime = updated;
        this.Version = version;
        this.metadata = metadata;
        this.userIds = userIds;
    }
    /**
     * This function returns the metadata associated with the latest version of the object.
     *
     * ---
     * SEE ALSO
     * --------
     * - [Data Stores](https://developer.roblox.com/en-us/articles/Data-store), an in-depth guide on data structure, management, error handling, etc.
     *
     * ---
     * @returns {Map<string, unknown>} Metadata associated with the key.
     */
    GetMetadata() {
        return this.metadata;
    }
    /**
     * This function returns an array of [UserIds](https://developer.roblox.com/en-us/api-reference/property/Player/UserId) tagged with the object. This information is useful for adhering to [GDPR](https://developer.roblox.com/en-us/articles/managing-personal-information) policies.
     *
     * ---
     * SEE ALSO
     * --------
     * - [Data Stores](https://developer.roblox.com/en-us/articles/Data-store), an in-depth guide on data structure, management, error handling, etc.
     *
     * ---
     * @returns {number[]} An array of [UserIds](https://developer.roblox.com/en-us/api-reference/property/Player/UserId) associated with the object.
     */
    GetUserIds() {
        return this.userIds;
    }
}
exports.DataStoreKeyInfo = DataStoreKeyInfo;
