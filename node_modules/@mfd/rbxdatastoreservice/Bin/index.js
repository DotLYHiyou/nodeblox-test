"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InitializeAsync = exports.DataStoreSetOptions = exports.DataStoreIncrementOptions = exports.OrderedDataStore = exports.DataStore = exports.GlobalDataStore = exports.DataStoreOptions = exports.DataStoreService = exports.SortDirection = void 0;
const AnalyticsHelper_1 = require("./Helpers/AnalyticsHelper");
const FastLogTool_1 = require("./Tools/FastLogTool");
(0, FastLogTool_1.DYNAMIC_FASTFLAGVARIABLE)('AnalyticsEnabled', true);
// TODO: http://analytics-ops.backlog.mfdlabs.local/ui/ga-tracking/issues/26512?t=no&shortName=Find+All+Tracker+IDs+That+Are+Used+In+Projects+That+Are+Also+Used+In+Other+Projects
//		 This tracker ID is used by the StatusPage Service. It is not owned by this. Dedicate another tracker ID to this.
(0, FastLogTool_1.DYNAMIC_FASTSTRINGVARIABLE)('GoogleAnalyticsAccountPropertyID', 'UA-201817978-1');
if ((0, FastLogTool_1.DFFlag)('AnalyticsEnabled')) {
    AnalyticsHelper_1.Analytics.GoogleAnalytics.setCanUse();
    AnalyticsHelper_1.Analytics.GoogleAnalytics.init((0, FastLogTool_1.DFString)('GoogleAnalyticsAccountPropertyID'), 'rcc');
}
var SortDirection_1 = require("./Enumeration/SortDirection");
Object.defineProperty(exports, "SortDirection", { enumerable: true, get: function () { return SortDirection_1.SortDirection; } });
const AuthenticationHelper_1 = require("./Helpers/AuthenticationHelper");
var DataStoreService_1 = require("./Classes/Services/DataStoreService");
Object.defineProperty(exports, "DataStoreService", { enumerable: true, get: function () { return DataStoreService_1.DataStoreService; } });
var DataStoreOptions_1 = require("./Classes/DataStoreOptions");
Object.defineProperty(exports, "DataStoreOptions", { enumerable: true, get: function () { return DataStoreOptions_1.DataStoreOptions; } });
var GlobalDataStore_1 = require("./Classes/GlobalDataStore");
Object.defineProperty(exports, "GlobalDataStore", { enumerable: true, get: function () { return GlobalDataStore_1.GlobalDataStore; } });
var DataStore_1 = require("./Classes/DataStore");
Object.defineProperty(exports, "DataStore", { enumerable: true, get: function () { return DataStore_1.DataStore; } });
var OrderedDataStore_1 = require("./Classes/OrderedDataStore");
Object.defineProperty(exports, "OrderedDataStore", { enumerable: true, get: function () { return OrderedDataStore_1.OrderedDataStore; } });
var DataStoreIncrementOptions_1 = require("./Classes/DataStoreIncrementOptions");
Object.defineProperty(exports, "DataStoreIncrementOptions", { enumerable: true, get: function () { return DataStoreIncrementOptions_1.DataStoreIncrementOptions; } });
var DataStoreSetOptions_1 = require("./Classes/DataStoreSetOptions");
Object.defineProperty(exports, "DataStoreSetOptions", { enumerable: true, get: function () { return DataStoreSetOptions_1.DataStoreSetOptions; } });
/**
 * Initializes the global cookie and place id, and tries to validate:
 * 1. The validity of the cookie.
 * 2. The ownership of the user to the place.
 * @param {string} cookie The cookie to use, must include the warning text.
 * @param {number} placeID The place ID to use, the user that is dependent on the cookie must have edit permissions for this place.
 */
exports.InitializeAsync = AuthenticationHelper_1.AuthenticationHelper.InitAuthenticatedUser;
