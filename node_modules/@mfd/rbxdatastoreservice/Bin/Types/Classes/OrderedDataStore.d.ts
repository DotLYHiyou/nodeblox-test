import { GlobalDataStore } from './GlobalDataStore';
import { DataStorePages } from './DataStorePages';
/**
 * A **OrderedDataStore** is essentially a [GlobalDataStore](https://developer.roblox.com/en-us/api-reference/class/GlobalDataStore) with the exception that stored values must be **positive integers**.
 * It exposes a method [GetSortedAsync()](https://developer.roblox.com/en-us/api-reference/function/OrderedDataStore/GetSortedAsync) which allows inspection of the entries in sorted order using a [DataStorePages](https://developer.roblox.com/en-us/api-reference/class/DataStorePages) object.
 * See the [Data Stores](https://developer.roblox.com/en-us/articles/Data-store) article for an in-depth guide on data structure, management, error handling, etc.
 */
export declare class OrderedDataStore extends GlobalDataStore {
    /**
     * Returns a [DataStorePages](https://developer.roblox.com/en-us/api-reference/class/DataStorePages) object.
     * The sort order is determined by **ascending**, the length of each page by **pageSize**, and **minValue**\/**maxValue** are optional parameters which filter the results.
     *
     * If this function throws an error, the [error message](https://developer.roblox.com/en-us/articles/Datastore-Errors) will describe the problem.
     * @param {boolean} ascending A boolean indicating whether the returned data pages are in ascending order.
     * @param {number} pagesize The length of each page.
     * @param {number?} minValue Optional parameter. If set, data pages with a value less than than **minValue** will be excluded.
     * @param {number?} maxValue Optional parameter. If set, data pages with a value greater than **maxValue** will be excluded.
     * @returns {DataStorePages} A sorted [DataStorePages](https://developer.roblox.com/en-us/api-reference/class/DataStorePages) object based on the provided arguments.
     * @yields This is a yielding function. When called, it will pause the JavaScript thread that called the function until a result is ready to be returned, without interrupting other scripts.
     */
    GetSortedAsync<Variant extends any>(ascending: boolean, pagesize: number, minValue?: Variant, maxValue?: Variant): Promise<DataStorePages>;
}
