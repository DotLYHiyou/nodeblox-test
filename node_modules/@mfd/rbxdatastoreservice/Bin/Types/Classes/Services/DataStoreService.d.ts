import { OrderedDataStore } from '../OrderedDataStore';
import { DataStoreOptions } from '../DataStoreOptions';
import { DataStoreListingPages as DataStoreListingPages } from '../DataStoreListingPages';
/**
 * **DataStoreService** exposes methods for getting [GlobalDataStore](https://developer.roblox.com/en-us/api-reference/class/GlobalDataStore) and [OrderedDataStore](https://developer.roblox.com/en-us/api-reference/class/OrderedDataStore) objects.
 * See the [Data Stores](https://developer.roblox.com/en-us/articles/Data-store) article for an in-depth guide on data structure, management, error handling, etc.
 */
export declare abstract class DataStoreService {
    /**
     * This function returns the default [GlobalDataStore](https://developer.roblox.com/en-us/api-reference/class/GlobalDataStore).
     * If you want to access a specific **named** data store instead,
     * you should use the [GetDataStore()](https://developer.roblox.com/en-us/api-reference/function/DataStoreService/GetDataStore) function.
     * @returns {GlobalDataStore} Default [GlobalDataStore](https://developer.roblox.com/en-us/api-reference/class/GlobalDataStore) instance
     * @unsafe For thread safety, this property is not safe to read in an unsynchronized thread.
     */
    static GetGlobalDataStore(): GlobalDataStore;
    /**
     * This function creates a [GlobalDataStore](https://developer.roblox.com/en-us/api-reference/class/GlobalDataStore) instance with the provided name and scope.
     * Subsequent calls to this method with the same name/scope will return the same object.
     *
     * ---
     * NOTICE
     * --------
     * If v2.0 experimental features are enabled, this function creates and returns a [DataStore](https://developer.roblox.com/en-us/api-reference/class/DataStore) instance instead of a [GlobalDataStore](https://developer.roblox.com/en-us/api-reference/class/GlobalDataStore) instance.
     *
     * ---
     *
     * Using the `scope` parameter will restrict operations to that scope by automatically prepending the scope to keys in all operations done on the data store. This function also accepts an optional [DataStoreOptions](https://developer.roblox.com/en-us/api-reference/class/DataStoreOptions) instance which includes options for enabling [AllScopes](https://developer.roblox.com/en-us/api-reference/property/DataStoreOptions/AllScopes|AllScopes). See [here](https://developer.roblox.com/en-us/articles/Data-store#scope) for details on scope.
     * @param {string} name Name of the data store.
     * @param {string=} scope (Optional) A string specifying the scope.
     * @param {DataStoreOptions} (Optional) A [DataStoreOptions](https://developer.roblox.com/en-us/api-reference/class/DataStoreOptions) instance to enable experimental features and v2 API features.
     * @returns {GlobalDataStore} [GlobalDataStore](https://developer.roblox.com/en-us/api-reference/class/GlobalDataStore)
     * @unsafe For thread safety, this property is not safe to read in an unsynchronized thread.
     */
    static GetDataStore(name: string, scope?: string, options?: DataStoreOptions): GlobalDataStore;
    /**
     * This method returns an [OrderedDataStore](https://developer.roblox.com/en-us/api-reference/class/OrderedDataStore),
     * similar to the way [GetDataStore()](https://developer.roblox.com/en-us/api-reference/function/DataStoreService/GetDataStore) does with [GlobalDataStores](https://developer.roblox.com/en-us/api-reference/class/GlobalDataStore).
     * Subsequent calls to this method with the same name/scope will return the same object.
     *
     * @param {string} name The name of the [OrderedDataStore](https://developer.roblox.com/en-us/api-reference/class/OrderedDataStore) you wish to get.
     * @param {string="global"} scope The scope of the [OrderedDataStore](https://developer.roblox.com/en-us/api-reference/class/OrderedDataStore) you wish to get, global by default
     * @returns {OrderedDataStore} [OrderedDataStore](https://developer.roblox.com/en-us/api-reference/class/OrderedDataStore)
     * @unsafe For thread safety, this property is not safe to read in an unsynchronized thread.
     */
    static GetOrderedDataStore(name: string, scope?: string): OrderedDataStore;
    /**
     * Returns a [DataStoreListingPages](https://developer.roblox.com/en-us/api-reference/class/DataStoreListingPages) object for enumerating through all of the experienceâ€™s data stores.
     * It accepts an optional `prefix` parameter to only locate data stores whose names start with the provided prefix.
     *
     * ---
     * NOTICE
     * ------
     * Only data stores containing at least one object will be listed via this function.
     *
     * ---
     *
     * SEE ALSO
     * --------
     * - [Data Stores](https://developer.roblox.com/en-us/articles/Data-store), an in-depth guide on data structure, management, error handling, etc.
     * ---
     *
     * @param {string} prefix (Optional) Prefix to enumerate data stores that start with the given prefix.
     * @param {number} pageSize (Optional) Number of items to be returned in each page.
     * @returns {DataStoreListingPages} [DataStoreListingPages](https://developer.roblox.com/en-us/api-reference/class/DataStoreListingPages) instance containing (https://developer.roblox.com/en-us/api-reference/class/DataStoreInfo) instances that provide details such as name, creation time, and time last updated.
     * @yields This is a yielding function. When called, it will pause the Javascript thread that called the function until a result is ready to be returned, without interrupting other scripts.
     * @unsafe For thread safety, this property is not safe to read in an unsynchronized thread.
     */
    static ListDataStoresAsync(prefix?: string, pageSize?: number): Promise<DataStoreListingPages>;
}
